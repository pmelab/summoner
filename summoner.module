<?php
/**
 * @file
 * Attach JS and CSS assets on demand from javascript using l.js.
 */

/**
 * Implements hook_library().
 */
function summoner_library() {
  $libraries = array();
  $libraries['summoner'] = array(
    'title' => t('Summoner'),
    'website' => 'http://www.drupal.org/project/summoner',
    'version' => '1.0',
    'js' => array(
      drupal_get_path('module', 'summoner') . '/assets/summoner.js' => array(),
    ),
    'dependencies' => array(
      array('system', 'drupal.ajax'),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_library_alter().
 */
function summoner_library_alter(&$libraries, $module) {
  foreach (array_keys($libraries) as $lib) {
    $libraries[$lib]['js'][] = array(
      'data' => array('summonerState' => array($module . '/' . $lib => TRUE)),
      'type' => 'setting',
    );
  }
}

/**
 * Implements hook_menu().
 */
function summoner_menu() {
  $items = array();
  $items['summoner/load/%/%summoner_libraries'] = array(
    'page callback' => 'summoner_load',
    'page arguments' => array(2, 3),
    'load arguments' => array(3),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Argument autoloader for libraries.
 */
function summoner_libraries_load($libraries) {
  $libraries = explode(',', $libraries);
  foreach ($libraries as $index => $lib) {
    list($module, $name) = explode('::', $lib);
    if (!drupal_get_library($module, $name)) {
      return FALSE;
    }
    $libraries[$index] = array($module, $name);
  }
  return $libraries;
}

/**
 * Build an AJAX response that causes Drupal to load additional required assets.
 */
function summoner_load($id, $libraries) {
  $state = array();
  foreach ($libraries as $lib) {
    $state[implode('/', $lib)] = TRUE;
  }

  $attached['#attached'] = array(
    'library' => $libraries,
    'js' => array(
      'state' => array(
        'data' => array('summonerState' => $state),
        'type' => 'setting',
      ),
      'inline' => array(
        'data' => 'Drupal.behaviors.summonerLoad' . $id . ' = { attach: function() {  jQuery(this).summonerLoaded(' . $id . '); } };',
        'type' => 'inline',
        // @see summoner_js_alter().
        'group' => 'summon',
      ),
    ),
  );

  drupal_render($attached);
  $page = array(
    '#type' => 'ajax',
    '#commands' => array(),
  );
  ajax_deliver($page);
}

/**
 * Implements hook_js_alter().
 *
 * Workaround for @todo in ajax.inc line 250.
 * Inline js and css are stripped out of ajax responses because of their numeric
 * key. drupal_process_attached() always sets the key numeric, thats why we
 * alter it afterwards.
 */
function summoner_js_alter(&$js) {
  foreach (array_keys($js) as $id) {
    if (is_numeric($id) && $js[$id]['group'] == 'summon') {
      $js[$js[$id]['data']] = $js[$id];
      $js[$js[$id]['data']]['group'] = 'theme';
      unset($js[$id]);
    }
  }
}
